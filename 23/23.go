// Удалить i-ый элемент из слайса.
package main

import "fmt"

func Remove(arr []string, i int) ([]string, error) {
	// Определение индекса последнего элемента
	last := len(arr) - 1
	// Проверка, что массив не пуст,
	// Запрашиваемый индекс находится в приделах существующего массива и неотрецателен
	if last >= 0 && i <= last && i >= 0 {
		// В удаляемый элемент перезаписывается значение последнего элемента массива
		arr[i] = arr[last]
		// Замена последнего элемента пустой строкой
		arr[last] = ""
		// Возрат слайса используемого размера и сигнификатор отсутствия ошибки
		return arr[:last], nil
	} else {
		// Возврат ошибки, если условие не было выполнено
		return nil, fmt.Errorf("Такого элемента нет в массиве")
	}
}

func RemoveKeepingOrder(arr []string, i int) ([]string, error) {
	// Определение индекса последнего элемента
	last := len(arr) - 1
	// Проверка, что массив не пуст,
	// Запрашиваемый индекс находится в приделах существующего массива и неотрецателен
	if last >= 0 && i <= last && i >= 0 {
		// Копирует элементы от следующего элемента до конца масива
		// На место удаляемого и дальше, как бы на один назад все сдвигается
		copy(arr[i:], arr[i+1:])
		// Перезаписывает последний задублированый элемент пустой строкой
		arr[last] = ""
		// Возрат слайса используемого размера и сигнификатор отсутствия ошибки
		return arr[:last], nil
	} else {
		// Возврат ошибки, если условие не было выполнено
		return nil, fmt.Errorf("Такого элемента нет в массиве")
	}
}

func main() {

}
