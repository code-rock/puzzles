// Реализовать быструю сортировку массива (quicksort) встроенными методами
// языка.
package main

func partition(arr []int, low, high int) int {
	// Задание элемента относительно которго пойдет сравнение (тот что соответсвует правой границе - верхней)
	pivot := arr[high]
	// Перебор индексов элементов от левой границы включительно до правой невключительно
	for j := low; j < high; j++ {
		// Если элемент меньше опорного
		if arr[j] < pivot {
			// Меняются местами элменент нижней границы и текущий в цикле
			arr[low], arr[j] = arr[j], arr[low]
			// Индекс нижней границы сдвигается на один
			low++
		}
	}
	// Элемент указателя нижней границы меняется с уквзателем верхней границ
	arr[low], arr[high] = arr[high], arr[low]
	// Возвращаем указатель нижней границы
	return low
}

func quickSort(arr []int, low, high int) {
	// Если левая граница меньше правой
	if low < high {
		// Получаем новую точку находящуюся где-то по серединке мужу нижней и верхней границами до
		p := partition(arr, low, high)
		// Вызов сортировки начиная от старой нижней границы до новой точки
		quickSort(arr, low, p-1)
		// Вызов сортировки начиная от новой нижней границы до старой верхней
		quickSort(arr, p+1, high)
	}
}

func QuickSort(arr []int) {
	// Вызов метода с передачей туда масива первого и последнего id элементов в массиве
	quickSort(arr, 0, len(arr)-1)
}

func main() {}
