package main

import (
	"fmt"
	"io"
	"os"
)

// Программа, которая конкурентно рассчитает значение
// квадратов чисел взятых из массива (2,4,6,8,10) и выведет их
// квадраты в stdout.

// Создание функции с передоваемым агрументом ns - массив целых чисел
func Square(ns []int) []int {
	// Создание целочисленного пустого канала
	pows := make(chan int)

	// Итерация по всем элементам масива целых чисел
	for _, value := range ns {
		// Самовызывающаяся горутина, куда аргументом явно передается целое число
		go func(n int) {
			// Возведение числа в квадрат и запись в канал результата
			pows <- n * n
		}(value)
	}

	// Cоздание пустова масива для записи степеней
	powArr := []int{}
	// Проходим по всей длене массива чисел
	for i := 0; i < len(ns); i++ {
		// Читаем одно значение из канала и записываем в массив
		append(powArr, <-pows)
	}
	// Возвращает из функции готовый масив степеней
	return powArr
}

func main() {
	// Создание масива целых чисел
	ns := []int{2, 3, 8, 12, 54, 1, 0}
	// Вызов функции возведения в квадрат
	pows := Square(ns)
	// Вывод степеней в стандартный поток вывода
	io.WriteString(os.Stdout, fmt.Sprintf("%v", pows))
}
